service: serverless-social-api
provider:
  name: aws
  runtime: python3.8
  environment:
    SOCIAL_APP_TABLE: "social-app-table2-${self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:table/${self:provider.environment.SOCIAL_APP_TABLE}"
  stage: dev
  region: us-east-1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  create:
    handler: users/create.create
    events:
      - http:
          path: users
          method: post
          cors: true

  follow:
    handler: following/follow.follow
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  list:
    handler: users/list.list
    events:
      - http:
          path: users
          method: get
          cors: true

  get:
    handler: users/get.get
    events:
      - http:
          path: user/{id}
          method: get
          cors: true

  update:
    handler: users/update.update
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  delete:
    handler: users/delete.delete
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

resources:
  Resources:
    SocialAppDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "${self:provider.environment.SOCIAL_APP_TABLE}"
